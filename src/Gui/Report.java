/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Frame;
import java.awt.GraphicsEnvironment;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.print.PrinterException;
import java.sql.*;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.text.*;
import java.awt.print.*;

/**
 *
 * @author proxc
 */
public class Report extends javax.swing.JFrame {

    /**
     * Creates new form Home10
     */
    Connection conn = null;
    Statement stmt = null;
    PreparedStatement pst;
    ResultSet rs;
    CardLayout cardlayout;
    public Report() {
        conn = ConnectDB.dbConnector();
        initComponents();
        cardlayout = (CardLayout)(cardPanel.getLayout());
    }
    
    static boolean maximized = true;
    static ImageIcon ii;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        play = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        searchID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Print = new javax.swing.JButton();
        choosePrint = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        cardPanel = new javax.swing.JPanel();
        Welcomepanel = new javax.swing.JPanel();
        CustomerReport = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_customer = new javax.swing.JTable();
        DepositReport = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_deposit = new javax.swing.JTable();
        WithdrawReport = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_withdraw = new javax.swing.JTable();
        TextAreaCustomers = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        table_transection = new javax.swing.JTable();
        Print1 = new javax.swing.JButton();
        TransferPanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        table_transfer = new javax.swing.JTable();
        Print2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Deposit");
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setName("Deposit"); // NOI18N
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 1, 181));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Semilight", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(254, 254, 254));
        jLabel8.setText("Bank Management System");

        play.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search_20px_1.png"))); // NOI18N
        play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playMouseClicked(evt);
            }
        });

        searchID.setBackground(new java.awt.Color(0, 0, 0));
        searchID.setForeground(new java.awt.Color(255, 255, 255));
        searchID.setBorder(null);

        jLabel7.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(177, 172, 172));
        jLabel7.setText("UI on Your FingerTips");

        Print.setBackground(new java.awt.Color(254, 254, 254));
        Print.setFont(new java.awt.Font("Ubuntu Mono", 1, 18)); // NOI18N
        Print.setForeground(new java.awt.Color(4, 4, 4));
        Print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-print-24.png"))); // NOI18N
        Print.setText("Print");
        Print.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.white));
        Print.setContentAreaFilled(false);
        Print.setOpaque(true);
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });

        choosePrint.setBackground(new java.awt.Color(254, 254, 254));
        choosePrint.setForeground(new java.awt.Color(1, 1, 1));
        choosePrint.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deposit", "Customer", "Withdraw" }));
        choosePrint.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.white));
        choosePrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                choosePrintMouseClicked(evt);
            }
        });
        choosePrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosePrintActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_filled_cancel_32px.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Transfer Money", "Deposit + Withdraw" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(choosePrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Print, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(play)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1)
                            .addComponent(searchID)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Print, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(choosePrint, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(play)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );

        cardPanel.setBackground(new java.awt.Color(255, 255, 255));
        cardPanel.setLayout(new java.awt.CardLayout());

        Welcomepanel.setBackground(new java.awt.Color(205, 205, 205));

        javax.swing.GroupLayout WelcomepanelLayout = new javax.swing.GroupLayout(Welcomepanel);
        Welcomepanel.setLayout(WelcomepanelLayout);
        WelcomepanelLayout.setHorizontalGroup(
            WelcomepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 728, Short.MAX_VALUE)
        );
        WelcomepanelLayout.setVerticalGroup(
            WelcomepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );

        cardPanel.add(Welcomepanel, "WelcomeCard");

        CustomerReport.setBackground(new java.awt.Color(205, 205, 205));

        jScrollPane3.setBackground(new java.awt.Color(255, 172, 172));

        table_customer.setBackground(new java.awt.Color(205, 205, 205));
        table_customer.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        table_customer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Fname", "Lname", "Country", "Gender", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_customer.setGridColor(new java.awt.Color(226, 226, 226));
        table_customer.setOpaque(false);
        table_customer.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(table_customer);

        javax.swing.GroupLayout CustomerReportLayout = new javax.swing.GroupLayout(CustomerReport);
        CustomerReport.setLayout(CustomerReportLayout);
        CustomerReportLayout.setHorizontalGroup(
            CustomerReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
        );
        CustomerReportLayout.setVerticalGroup(
            CustomerReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
        );

        cardPanel.add(CustomerReport, "CustomerCard");

        DepositReport.setBackground(new java.awt.Color(205, 205, 205));
        DepositReport.setToolTipText("");

        jScrollPane2.setBackground(new java.awt.Color(255, 172, 172));

        table_deposit.setBackground(new java.awt.Color(205, 205, 205));
        table_deposit.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        table_deposit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Deposit ammount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_deposit.setGridColor(new java.awt.Color(226, 226, 226));
        table_deposit.setOpaque(false);
        table_deposit.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(table_deposit);

        javax.swing.GroupLayout DepositReportLayout = new javax.swing.GroupLayout(DepositReport);
        DepositReport.setLayout(DepositReportLayout);
        DepositReportLayout.setHorizontalGroup(
            DepositReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
        );
        DepositReportLayout.setVerticalGroup(
            DepositReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DepositReportLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        cardPanel.add(DepositReport, "DepositCard");

        WithdrawReport.setBackground(new java.awt.Color(205, 205, 205));
        WithdrawReport.setToolTipText("");

        jScrollPane1.setBackground(new java.awt.Color(255, 172, 172));

        table_withdraw.setBackground(new java.awt.Color(205, 205, 205));
        table_withdraw.setFont(new java.awt.Font("Noto Sans CJK TC", 0, 14)); // NOI18N
        table_withdraw.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Withdraw ammount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_withdraw.setGridColor(new java.awt.Color(226, 226, 226));
        table_withdraw.setOpaque(false);
        table_withdraw.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table_withdraw);

        javax.swing.GroupLayout WithdrawReportLayout = new javax.swing.GroupLayout(WithdrawReport);
        WithdrawReport.setLayout(WithdrawReportLayout);
        WithdrawReportLayout.setHorizontalGroup(
            WithdrawReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
        );
        WithdrawReportLayout.setVerticalGroup(
            WithdrawReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WithdrawReportLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        cardPanel.add(WithdrawReport, "WithdrawCard");

        TextAreaCustomers.setBackground(new java.awt.Color(205, 205, 205));
        TextAreaCustomers.setToolTipText("");

        table_transection.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cus_id", "Name", "Transsaction money", "Status", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_transection.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(table_transection);

        Print1.setBackground(new java.awt.Color(254, 254, 254));
        Print1.setFont(new java.awt.Font("Ubuntu Mono", 1, 18)); // NOI18N
        Print1.setForeground(new java.awt.Color(4, 4, 4));
        Print1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-print-24.png"))); // NOI18N
        Print1.setText("Print");
        Print1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.white));
        Print1.setContentAreaFilled(false);
        Print1.setOpaque(true);
        Print1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Print1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TextAreaCustomersLayout = new javax.swing.GroupLayout(TextAreaCustomers);
        TextAreaCustomers.setLayout(TextAreaCustomersLayout);
        TextAreaCustomersLayout.setHorizontalGroup(
            TextAreaCustomersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TextAreaCustomersLayout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(Print1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(TextAreaCustomersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                .addContainerGap())
        );
        TextAreaCustomersLayout.setVerticalGroup(
            TextAreaCustomersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TextAreaCustomersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Print1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        cardPanel.add(TextAreaCustomers, "TextAreaCard");

        TransferPanel.setBackground(new java.awt.Color(205, 205, 205));
        TransferPanel.setToolTipText("");

        table_transfer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Sender Account", "Reciever Account", "Ammount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_transfer.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(table_transfer);
        if (table_transfer.getColumnModel().getColumnCount() > 0) {
            table_transfer.getColumnModel().getColumn(0).setResizable(false);
            table_transfer.getColumnModel().getColumn(1).setResizable(false);
            table_transfer.getColumnModel().getColumn(2).setResizable(false);
            table_transfer.getColumnModel().getColumn(3).setResizable(false);
        }

        Print2.setBackground(new java.awt.Color(254, 254, 254));
        Print2.setFont(new java.awt.Font("Ubuntu Mono", 1, 18)); // NOI18N
        Print2.setForeground(new java.awt.Color(4, 4, 4));
        Print2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-print-24.png"))); // NOI18N
        Print2.setText("Print");
        Print2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.white));
        Print2.setContentAreaFilled(false);
        Print2.setOpaque(true);
        Print2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Print2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TransferPanelLayout = new javax.swing.GroupLayout(TransferPanel);
        TransferPanel.setLayout(TransferPanelLayout);
        TransferPanelLayout.setHorizontalGroup(
            TransferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransferPanelLayout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(Print2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(TransferPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                .addContainerGap())
        );
        TransferPanelLayout.setVerticalGroup(
            TransferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransferPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Print2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        cardPanel.add(TransferPanel, "transferCard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
int xy;
int xx;
    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx,y-xy);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
         xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed
       String printChoose = choosePrint.getSelectedItem().toString();
        if(printChoose == "Deposit"){
                MessageFormat header = new MessageFormat("Deposit print");
                
                MessageFormat footer = new MessageFormat("Page{0,number,integer}");
                
                try{
                    table_deposit.print(JTable.PrintMode.FIT_WIDTH, header,footer);
                } catch (java.awt.print.PrinterException e){
                    System.err.format("cannot print %s%n", e.getMessage());
                }
            }
            else if(printChoose == "Customer"){
                MessageFormat header = new MessageFormat("Customer print");
                
                MessageFormat footer = new MessageFormat("Page{0,number,integer}");
                
                try{
                    table_customer.print(JTable.PrintMode.FIT_WIDTH, header,footer);
                } catch (java.awt.print.PrinterException e){
                    System.err.format("cannot print %s%n", e.getMessage());
                }
            }
            else if(printChoose == "Withdraw"){
                MessageFormat header = new MessageFormat("Withdraw print");
                
                MessageFormat footer = new MessageFormat("Page{0,number,integer}");
                
                try{
                    table_withdraw.print(JTable.PrintMode.FIT_WIDTH, header,footer);
                } catch (java.awt.print.PrinterException e){
                    System.err.format("cannot print %s%n", e.getMessage());
                }
        }
    }//GEN-LAST:event_PrintActionPerformed

    private void choosePrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosePrintActionPerformed
        if(choosePrint.getSelectedIndex() == 0){
            cardlayout.show(cardPanel, "DepositCard");
                loadDepositData();
            }
        else if(choosePrint.getSelectedIndex() == 1){
            cardlayout.show(cardPanel, "CustomerCard"); 
                loadCustomerData();
            }
        else if(choosePrint.getSelectedIndex() == 2){
            cardlayout.show(cardPanel, "WithdrawCard");
                loadWithdrawData();
            }
    }//GEN-LAST:event_choosePrintActionPerformed

    private void choosePrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_choosePrintMouseClicked
        if(choosePrint.getSelectedIndex() == 0){
            cardlayout.show(cardPanel, "DepositCard");
                loadDepositData();
            }
        else if(choosePrint.getSelectedIndex() == 1){
            cardlayout.show(cardPanel, "CustomerCard"); 
                loadCustomerData();
            }
        else if(choosePrint.getSelectedIndex() == 2){
            cardlayout.show(cardPanel, "WithdrawCard");
                loadWithdrawData();
            }
    }//GEN-LAST:event_choosePrintMouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void playMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playMouseClicked
        //search Customers
        int indexid = jComboBox1.getSelectedIndex();
        if(indexid == 1){
        cardlayout.show(cardPanel, "TextAreaCard");
            String sql = "SELECT * FROM Deposit where Deposit_id =? UNION ALL SELECT * FROM Withdraw where Withdraw_id =?";
            String getuserid = searchID.getText();
        try{
            pst = conn.prepareStatement(sql);
            pst.setString(1, getuserid);
            pst.setString(2, getuserid);
            rs = pst.executeQuery();
            while(table_transection.getRowCount() > 0){
                ((DefaultTableModel)table_transection.getModel()).removeRow(0);
            }
            int col = rs.getMetaData().getColumnCount();
            
            while(rs.next()){
                Object[] rows = new Object[col];
                for(int i =1; i<= col; i++){
                    rows[i-1] = rs.getObject(i);                    
                }               
                ((DefaultTableModel)table_transection.getModel()).insertRow(rs.getRow() -1,rows);
                
            }
            rs.close();
            pst.close(); 
        }catch(Exception e){
            System.out.println(e);
        }
        }
        else if(indexid == 0){
            cardlayout.show(cardPanel, "transferCard");
            String sql = "SELECT `Date`, `Sender_id`, `Reciver_id`, `Ammount` FROM `Transfer` WHERE Sender_id = ? UNION ALL SELECT `Date`, `Sender_id`, `Reciver_id`, `Ammount` FROM `Transfer` WHERE Reciver_id = ?";
            String getuserid = searchID.getText();
        try{
            pst = conn.prepareStatement(sql);
            pst.setString(1, getuserid);
            pst.setString(2, getuserid);
            rs = pst.executeQuery();
            while(table_transfer.getRowCount() > 0){
                ((DefaultTableModel)table_transfer.getModel()).removeRow(0);
            }
            int col = rs.getMetaData().getColumnCount();
            
            while(rs.next()){
                Object[] rows = new Object[col];
                for(int i =1; i<= col; i++){
                    rows[i-1] = rs.getObject(i);                    
                }               
                ((DefaultTableModel)table_transfer.getModel()).insertRow(rs.getRow() -1,rows);
                
            }
            rs.close();
            pst.close(); 
        }catch(Exception e){
            System.out.println(e);
        }
        }
    }//GEN-LAST:event_playMouseClicked

    private void Print1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Print1ActionPerformed
                String name = searchID.getText();
                MessageFormat header = new MessageFormat("ID Person: "+name);
                
                MessageFormat footer = new MessageFormat("Page{0,number,integer}");
                
                try{
                    table_transection.print(JTable.PrintMode.FIT_WIDTH, header,footer);
                } catch (java.awt.print.PrinterException e){
                    System.err.format("cannot print %s%n", e.getMessage());
                }
    }//GEN-LAST:event_Print1ActionPerformed

    private void Print2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Print2ActionPerformed
        String name = searchID.getText();
                MessageFormat header = new MessageFormat("ID Person: "+name+"\nTransfer Money");
                
                MessageFormat footer = new MessageFormat("Page{0,number,integer}");
                
                try{
                    table_transfer.print(JTable.PrintMode.FIT_WIDTH, header,footer);
                } catch (java.awt.print.PrinterException e){
                    System.err.format("cannot print %s%n", e.getMessage());
                }
    }//GEN-LAST:event_Print2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CustomerReport;
    private javax.swing.JPanel DepositReport;
    private javax.swing.JButton Print;
    private javax.swing.JButton Print1;
    private javax.swing.JButton Print2;
    private javax.swing.JPanel TextAreaCustomers;
    private javax.swing.JPanel TransferPanel;
    private javax.swing.JPanel Welcomepanel;
    private javax.swing.JPanel WithdrawReport;
    private javax.swing.JPanel cardPanel;
    public javax.swing.JComboBox<String> choosePrint;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel play;
    private javax.swing.JTextField searchID;
    private javax.swing.JTable table_customer;
    private javax.swing.JTable table_deposit;
    private javax.swing.JTable table_transection;
    private javax.swing.JTable table_transfer;
    private javax.swing.JTable table_withdraw;
    // End of variables declaration//GEN-END:variables
void loadWithdrawData(){
    String sql = "Select * from Withdraw";
    try{
            pst = conn.prepareStatement(sql);
            //pst.setString(1, getuserid);
            rs = pst.executeQuery();
            while(table_withdraw.getRowCount() > 0){
                ((DefaultTableModel)table_withdraw.getModel()).removeRow(0);
            }
            int col = rs.getMetaData().getColumnCount();
            
            while(rs.next()){
                Object[] rows = new Object[col];
                for(int i =1; i<= col; i++){
                    rows[i-1] = rs.getObject(i);                    
                }               
                ((DefaultTableModel)table_withdraw.getModel()).insertRow(rs.getRow() -1,rows);
                
            }
            rs.close();
            pst.close(); 
        }catch(Exception e){
            System.out.println(e);
        }
    
}

void loadDepositData(){
    String sql = "Select * from Deposit";
    try{
            pst = conn.prepareStatement(sql);
            //pst.setString(1, getuserid);
            rs = pst.executeQuery();
            while(table_deposit.getRowCount() > 0){
                ((DefaultTableModel)table_deposit.getModel()).removeRow(0);
            }
            int col = rs.getMetaData().getColumnCount();
            
            while(rs.next()){
                Object[] rows = new Object[col];
                for(int i =1; i<= col; i++){
                    rows[i-1] = rs.getObject(i);                    
                }               
                ((DefaultTableModel)table_deposit.getModel()).insertRow(rs.getRow() -1,rows);
                
            }
            rs.close();
            pst.close(); 
        }catch(Exception e){
            System.out.println(e);
        }
    
}

void loadCustomerData(){
    String sql = "Select Acc_Number,fname,lname,Nationality,Gender,Address from Customers";
    try{
            pst = conn.prepareStatement(sql);
            //pst.setString(1, getuserid);
            rs = pst.executeQuery();
            while(table_customer.getRowCount() > 0){
                ((DefaultTableModel)table_customer.getModel()).removeRow(0);
            }
            int col = rs.getMetaData().getColumnCount();
            
            while(rs.next()){
                Object[] rows = new Object[col];
                for(int i =1; i<= col; i++){
                    rows[i-1] = rs.getObject(i);                    
                }               
                ((DefaultTableModel)table_customer.getModel()).insertRow(rs.getRow() -1,rows);
                
            }
            rs.close();
            pst.close(); 
        }catch(Exception e){
            System.out.println(e);
        }
    
}
   
}
